public class Solution {
 public static long houseRobber(int[] value) {
   int n=value.length;
   long[][] dp=new long[n][2];
   for(int i=0;i<n;i++){
     dp[i][0]=dp[i][1]=-1;
   }
   return fun(0,n,0,value,dp);
 } 
 public static long fun(int i,int n,int taken,int[] value,long[][] dp){
   if(i>=n)return 0;
   if(dp[i][taken]!=-1)return dp[i][taken];
   if(i==n-1){
     if(taken==1)return 0;
     else{
       return (long)value[n-1];
     }
   }
   if(i==0){
     return dp[i][taken]=Math.max((long)value[i]+fun(i+2,n,1,value,dp),fun(i+1,n,taken,value,dp));
   }
   return dp[i][taken]=Math.max((long)value[i]+fun(i+2,n,taken,value,dp),fun(i+1,n,taken,value,dp));
 }
}
