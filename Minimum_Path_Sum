import java.util.* ;
import java.io.*; 
public class Solution {
    public static int minSumPath(int[][] grid) {
        int n=grid.length;
        int m=grid[0].length;
    	int[][] dp=new int[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                dp[i][j]=-1;
            }
        }
        return fun(0,0,n,m,grid,dp);
    }
    public static int fun(int i,int j,int n,int m,int[][] grid,int[][] dp){
        if(i==n-1 && j==m-1){
            return grid[i][j];
        }
        if(dp[i][j]!=-1)return dp[i][j];
        int down=1000000001,right=1000000001;
        if(i+1<n)
        down=grid[i][j]+fun(i+1,j,n,m,grid,dp);
        if(j+1<m)
        right=grid[i][j]+fun(i,j+1,n,m,grid,dp);
        return dp[i][j]=Math.min(down,right);
    }
}
