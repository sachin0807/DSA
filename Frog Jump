public class Solution { 
 public static int frogJump(int n, int heights[]) { 
   if(n==1)return 0; 
   if(n==2)return (int)Math.abs(heights[1]-heights[0]); 
   int[] dp=new int[n]; for(int i=0;i<n;i++)dp[i]=-1; 
   return fun(0,n,dp,heights); 
 } 
 public static int fun(int i,int n,int[] dp,int[] heights){ 
   if(i==n-1)return 0; 
   if(dp[i]!=-1)return dp[i];
   int ans=0; 
   if(i+1<n){ 
     ans=(int)Math.abs(heights[i+1]-heights[i])+fun(i+1,n,dp,heights); 
   } 
   if(i+2<n){ 
     ans=Math.min(ans,(int)Math.abs(heights[i+2]-heights[i])+fun(i+2,n,dp,heights)); 
   } 
   return dp[i]=ans; 
 }
}
