public class Solution {

    public static int editDistance(String str1, String str2) {
        int n=str1.length();
        int m=str2.length();
        if(m>n)return editDistance(str2, str1);
        int[][] dp=new int[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                dp[i][j]=-1;
            }
        }
        return fun(0,0,n,m,str1,str2,dp);
    }
    public static int fun(int i,int j,int n,int m,String str1,String str2,int[][] dp){
        if(i==n){
            return (m-j);
        }
        if(j==m){
            return (n-i);
        }
        if(dp[i][j]!=-1)return dp[i][j];
        int ans=1+Math.min(fun(i+1,j,n,m,str1,str2,dp),Math.min(fun(i+1,j+1,n,m,str1,str2,dp),fun(i,j+1,n,m,str1,str2,dp)));
        if(str1.charAt(i)==str2.charAt(j)){
            ans=Math.min(ans,fun(i+1,j+1,n,m,str1,str2,dp));
        }
        return dp[i][j]=ans;
    }
}
