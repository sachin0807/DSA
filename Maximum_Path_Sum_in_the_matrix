import java.util.* ;
import java.io.*; 

public class Solution {
	public static int getMaxPathSum(int[][] matrix) {
		
		int n=matrix.length;
		int m=matrix[0].length;
		int[][] dp=new int[n][m];
		for(int i=0;i<n;i++){
			for(int j=0;j<m;j++){
				dp[i][j]=-1000000000;
			}
		}
		int ans=Integer.MIN_VALUE;
		for(int i=0;i<m;i++){
			ans=Math.max(ans,fun(0,i,n,m,matrix,dp));
		}
		return ans;
	}
	public static int fun(int i,int j,int n,int m,int[][] matrix,int[][] dp){
		if(i==n-1){
			return matrix[i][j];
		}
		if(dp[i][j]!=-1000000000)return dp[i][j];
		int ans=Integer.MIN_VALUE;
		if(j+1<m){
			ans=Math.max(ans,matrix[i][j]+fun(i+1,j+1,n,m,matrix,dp));
		}
		if(j-1>=0){
			ans=Math.max(ans,matrix[i][j]+fun(i+1,j-1,n,m,matrix,dp));
		}
		ans=Math.max(ans,matrix[i][j]+fun(i+1,j,n,m,matrix,dp));
		return dp[i][j]=ans;
	}
}
