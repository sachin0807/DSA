import java.util.* ;
import java.io.*; 
public class Solution {
    public static int minimumPathSum(int[][] triangle, int n) {
        int[][] dp=new int[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                dp[i][j]=1000000001;
            }
        }
        return fun(0,0,n,triangle,dp);
    }
    public static int fun(int i,int j,int n,int[][] triangle,int[][] dp){
        if(i==n-1){
            return triangle[i][j];
        }
        if(dp[i][j]!=1000000001)return dp[i][j];
        return dp[i][j]=triangle[i][j]+Math.min(fun(i+1,j,n,triangle,dp),fun(i+1,j+1,n,triangle,dp));
    }
}
