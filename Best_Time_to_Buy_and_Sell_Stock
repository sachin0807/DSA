import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution{
    public static int maximumProfit(ArrayList<Integer> prices){
        int n=prices.size();
        int[][] dp=new int[n][2];
        for(int i=0;i<n;i++){
            for(int j=0;j<2;j++){
                dp[i][j]=-1;
            }
        }
        int ans=fun(0,n,0,prices,dp);
        if(ans<0)ans=0;
        return ans;
    }
    public static int fun(int i,int n,int buy,ArrayList<Integer> prices,int[][] dp){
        if(i==n){
            return -1000000000;
        }
        if(dp[i][buy]!=-1)return dp[i][buy];
        if(buy==0){
            return dp[i][buy]=Math.max(fun(i+1,n,buy,prices,dp),(-1)*prices.get(i)+fun(i+1,n,1,prices,dp));
        }
        return dp[i][buy]=Math.max(fun(i+1,n,buy,prices,dp),prices.get(i));
    }
}
