import java.util.* ;
import java.io.*; 
public class Solution {
	public static int countPartitions(int n, int d, int[] arr) {
		int sum=0;
		for(int i=0;i<n;i++){
			sum+=arr[i];
		}
		if((d+sum)%2!=0)return 0;
		int temp=(d+sum)/2;

		int[][] dp=new int[n][temp+1];
		for(int i=0;i<n;i++){
			for(int j=0;j<=temp;j++){
				dp[i][j]=-1;
			}
		}
		return fun(0,n,temp,arr,dp);
	}
	public static int fun(int i,int n,int temp,int[] arr,int[][] dp){
		if(i==n){
			if(temp==0)return 1;
			else return 0;
		}
		if(dp[i][temp]!=-1)return dp[i][temp];
		int pick=0,notpick=0;
		if(temp>=arr[i]){
			pick=fun(i+1,n,temp-arr[i],arr,dp);
		}
		notpick=fun(i+1,n,temp,arr,dp);
		dp[i][temp]=(pick+notpick)%1000000007;
		return dp[i][temp];
	}
}
