import java.util.*;
public class Solution {
    public static List< Integer > divisibleSet(int []arr) {
        int n=arr.length;
        Arrays.sort(arr);
        int[][] dp=new int[n][2];
        for(int i=0;i<n;i++){
            dp[i][0]=1;
            dp[i][1]=i;
        }

        for(int i=1;i<n;i++){
            for(int j=i-1;j>=0;j--){
                if((arr[i]%arr[j])==0 && (1+dp[j][0])>dp[i][0]){
                    dp[i][0]=1+dp[j][0];
                    dp[i][1]=j;
                }
            }
        }

        int maxi=Integer.MIN_VALUE;
        int max_idx=-1;
        for(int i=0;i<n;i++){
            if(dp[i][0]>maxi){
                maxi=dp[i][0];
                max_idx=i;
            }
        }
        int i=max_idx;
        List<Integer> ans=new ArrayList<>();
        while(dp[i][1]!=i){
            ans.add(arr[i]);
            i=dp[i][1];
        }
        ans.add(arr[i]);
        return ans;
    }
}
